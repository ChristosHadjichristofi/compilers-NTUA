[LINE: 1135] Error at: Line 7, Characters 6 - 9
	Type mismatch: impossible to unify CustomType(tree) with CustomType(tr).


 $$$ PRINTING SYMBOL TABLE $$$ 
 ====================================================== 
SCOPE: 1

Symbol Entry: 
    ID: N

    TYPE: N()

    PARAMS:
		Name: tr, Type: CustomType(tr)


Symbol Entry: 
    ID: Nil

    TYPE: Nil()

    PARAMS:
		Name: tree, Type: CustomType(tree)


Symbol Entry: 
    ID: Node

    TYPE: Node(Integer, CustomType(tree), CustomType(tree))

    PARAMS:
		Name: tree, Type: CustomType(tree)


Symbol Entry: 
    ID: tr

    TYPE: CustomType(tr)

    PARAMS:
		Name: N, Type: N()


Symbol Entry: 
    ID: tree

    TYPE: CustomType(tree)

    PARAMS:
		Name: Nil, Type: Nil()
		Name: Node, Type: Node(Integer, CustomType(tree), CustomType(tree))


Symbol Entry: 
    ID: treeInsert

    TYPE: fn: CustomType(tr) -> Integer -> CustomType(tree)

    PARAMS:
		Name: t, Type: CustomType(tr)
		Name: n, Type: Integer





 $$$ PRINTING SYMBOL TABLE $$$ 
 ====================================================== 
SCOPE: 1

Symbol Entry: 
    ID: N

    TYPE: N()

    PARAMS:
		Name: tr, Type: CustomType(tr)


Symbol Entry: 
    ID: Nil

    TYPE: Nil()

    PARAMS:
		Name: tree, Type: CustomType(tree)


Symbol Entry: 
    ID: Node

    TYPE: Node(Integer, CustomType(tree), CustomType(tree))

    PARAMS:
		Name: tree, Type: CustomType(tree)


Symbol Entry: 
    ID: tr

    TYPE: CustomType(tr)

    PARAMS:
		Name: N, Type: N()


Symbol Entry: 
    ID: tree

    TYPE: CustomType(tree)

    PARAMS:
		Name: Nil, Type: Nil()
		Name: Node, Type: Node(Integer, CustomType(tree), CustomType(tree))


Symbol Entry: 
    ID: treeInsert

    TYPE: fn: CustomType(tr) -> Integer -> CustomType(tree)

    PARAMS:
		Name: t, Type: CustomType(tr)
		Name: n, Type: Integer


Symbol Entry: 
    ID: treeMerge

    TYPE: fn: CustomType(tree) -> CustomType(tree) -> CustomType(tree)

    PARAMS:
		Name: t1, Type: CustomType(tree)
		Name: t2, Type: CustomType(tree)





 $$$ PRINTING SYMBOL TABLE $$$ 
 ====================================================== 
SCOPE: 1

Symbol Entry: 
    ID: N

    TYPE: N()

    PARAMS:
		Name: tr, Type: CustomType(tr)


Symbol Entry: 
    ID: Nil

    TYPE: Nil()

    PARAMS:
		Name: tree, Type: CustomType(tree)


Symbol Entry: 
    ID: Node

    TYPE: Node(Integer, CustomType(tree), CustomType(tree))

    PARAMS:
		Name: tree, Type: CustomType(tree)


Symbol Entry: 
    ID: tr

    TYPE: CustomType(tr)

    PARAMS:
		Name: N, Type: N()


Symbol Entry: 
    ID: tree

    TYPE: CustomType(tree)

    PARAMS:
		Name: Nil, Type: Nil()
		Name: Node, Type: Node(Integer, CustomType(tree), CustomType(tree))


Symbol Entry: 
    ID: treeDelete

    TYPE: fn: CustomType(tree) -> Integer -> CustomType(tree)

    PARAMS:
		Name: t, Type: CustomType(tree)
		Name: n, Type: Integer


Symbol Entry: 
    ID: treeInsert

    TYPE: fn: CustomType(tr) -> Integer -> CustomType(tree)

    PARAMS:
		Name: t, Type: CustomType(tr)
		Name: n, Type: Integer


Symbol Entry: 
    ID: treeMerge

    TYPE: fn: CustomType(tree) -> CustomType(tree) -> CustomType(tree)

    PARAMS:
		Name: t1, Type: CustomType(tree)
		Name: t2, Type: CustomType(tree)





 $$$ PRINTING SYMBOL TABLE $$$ 
 ====================================================== 
SCOPE: 1

Symbol Entry: 
    ID: N

    TYPE: N()

    PARAMS:
		Name: tr, Type: CustomType(tr)


Symbol Entry: 
    ID: Nil

    TYPE: Nil()

    PARAMS:
		Name: tree, Type: CustomType(tree)


Symbol Entry: 
    ID: Node

    TYPE: Node(Integer, CustomType(tree), CustomType(tree))

    PARAMS:
		Name: tree, Type: CustomType(tree)


Symbol Entry: 
    ID: tr

    TYPE: CustomType(tr)

    PARAMS:
		Name: N, Type: N()


Symbol Entry: 
    ID: tree

    TYPE: CustomType(tree)

    PARAMS:
		Name: Nil, Type: Nil()
		Name: Node, Type: Node(Integer, CustomType(tree), CustomType(tree))


Symbol Entry: 
    ID: treeDelete

    TYPE: fn: CustomType(tree) -> Integer -> CustomType(tree)

    PARAMS:
		Name: t, Type: CustomType(tree)
		Name: n, Type: Integer


Symbol Entry: 
    ID: treeInsert

    TYPE: fn: CustomType(tr) -> Integer -> CustomType(tree)

    PARAMS:
		Name: t, Type: CustomType(tr)
		Name: n, Type: Integer


Symbol Entry: 
    ID: treeMerge

    TYPE: fn: CustomType(tree) -> CustomType(tree) -> CustomType(tree)

    PARAMS:
		Name: t1, Type: CustomType(tree)
		Name: t2, Type: CustomType(tree)


Symbol Entry: 
    ID: treePrint

    TYPE: fn: CustomType(tree) -> Unit

    PARAMS:
		Name: t, Type: CustomType(tree)





 $$$ PRINTING SYMBOL TABLE $$$ 
 ====================================================== 
SCOPE: 1

Symbol Entry: 
    ID: N

    TYPE: N()

    PARAMS:
		Name: tr, Type: CustomType(tr)


Symbol Entry: 
    ID: Nil

    TYPE: Nil()

    PARAMS:
		Name: tree, Type: CustomType(tree)


Symbol Entry: 
    ID: Node

    TYPE: Node(Integer, CustomType(tree), CustomType(tree))

    PARAMS:
		Name: tree, Type: CustomType(tree)


Symbol Entry: 
    ID: tr

    TYPE: CustomType(tr)

    PARAMS:
		Name: N, Type: N()


Symbol Entry: 
    ID: tree

    TYPE: CustomType(tree)

    PARAMS:
		Name: Nil, Type: Nil()
		Name: Node, Type: Node(Integer, CustomType(tree), CustomType(tree))


Symbol Entry: 
    ID: treeCount

    TYPE: fn: CustomType(tree) -> Integer

    PARAMS:
		Name: t, Type: CustomType(tree)


Symbol Entry: 
    ID: treeDelete

    TYPE: fn: CustomType(tree) -> Integer -> CustomType(tree)

    PARAMS:
		Name: t, Type: CustomType(tree)
		Name: n, Type: Integer


Symbol Entry: 
    ID: treeInsert

    TYPE: fn: CustomType(tr) -> Integer -> CustomType(tree)

    PARAMS:
		Name: t, Type: CustomType(tr)
		Name: n, Type: Integer


Symbol Entry: 
    ID: treeMerge

    TYPE: fn: CustomType(tree) -> CustomType(tree) -> CustomType(tree)

    PARAMS:
		Name: t1, Type: CustomType(tree)
		Name: t2, Type: CustomType(tree)


Symbol Entry: 
    ID: treePrint

    TYPE: fn: CustomType(tree) -> Unit

    PARAMS:
		Name: t, Type: CustomType(tree)





 $$$ PRINTING SYMBOL TABLE $$$ 
 ====================================================== 
SCOPE: 1

Symbol Entry: 
    ID: N

    TYPE: N()

    PARAMS:
		Name: tr, Type: CustomType(tr)


Symbol Entry: 
    ID: Nil

    TYPE: Nil()

    PARAMS:
		Name: tree, Type: CustomType(tree)


Symbol Entry: 
    ID: Node

    TYPE: Node(Integer, CustomType(tree), CustomType(tree))

    PARAMS:
		Name: tree, Type: CustomType(tree)


Symbol Entry: 
    ID: main

    TYPE: Unknown

Symbol Entry: 
    ID: tr

    TYPE: CustomType(tr)

    PARAMS:
		Name: N, Type: N()


Symbol Entry: 
    ID: tree

    TYPE: CustomType(tree)

    PARAMS:
		Name: Nil, Type: Nil()
		Name: Node, Type: Node(Integer, CustomType(tree), CustomType(tree))


Symbol Entry: 
    ID: treeCount

    TYPE: fn: CustomType(tree) -> Integer

    PARAMS:
		Name: t, Type: CustomType(tree)


Symbol Entry: 
    ID: treeDelete

    TYPE: fn: CustomType(tree) -> Integer -> CustomType(tree)

    PARAMS:
		Name: t, Type: CustomType(tree)
		Name: n, Type: Integer


Symbol Entry: 
    ID: treeInsert

    TYPE: fn: CustomType(tr) -> Integer -> CustomType(tree)

    PARAMS:
		Name: t, Type: CustomType(tr)
		Name: n, Type: Integer


Symbol Entry: 
    ID: treeMerge

    TYPE: fn: CustomType(tree) -> CustomType(tree) -> CustomType(tree)

    PARAMS:
		Name: t1, Type: CustomType(tree)
		Name: t2, Type: CustomType(tree)


Symbol Entry: 
    ID: treePrint

    TYPE: fn: CustomType(tree) -> Unit

    PARAMS:
		Name: t, Type: CustomType(tree)

 ====================================================== 
SCOPE: 2

Symbol Entry: 
    ID: seed

    TYPE: Reference of type Unknown




 $$$ PRINTING SYMBOL TABLE $$$ 
 ====================================================== 
SCOPE: 1

Symbol Entry: 
    ID: N

    TYPE: N()

    PARAMS:
		Name: tr, Type: CustomType(tr)


Symbol Entry: 
    ID: Nil

    TYPE: Nil()

    PARAMS:
		Name: tree, Type: CustomType(tree)


Symbol Entry: 
    ID: Node

    TYPE: Node(Integer, CustomType(tree), CustomType(tree))

    PARAMS:
		Name: tree, Type: CustomType(tree)


Symbol Entry: 
    ID: main

    TYPE: Unknown

Symbol Entry: 
    ID: tr

    TYPE: CustomType(tr)

    PARAMS:
		Name: N, Type: N()


Symbol Entry: 
    ID: tree

    TYPE: CustomType(tree)

    PARAMS:
		Name: Nil, Type: Nil()
		Name: Node, Type: Node(Integer, CustomType(tree), CustomType(tree))


Symbol Entry: 
    ID: treeCount

    TYPE: fn: CustomType(tree) -> Integer

    PARAMS:
		Name: t, Type: CustomType(tree)


Symbol Entry: 
    ID: treeDelete

    TYPE: fn: CustomType(tree) -> Integer -> CustomType(tree)

    PARAMS:
		Name: t, Type: CustomType(tree)
		Name: n, Type: Integer


Symbol Entry: 
    ID: treeInsert

    TYPE: fn: CustomType(tr) -> Integer -> CustomType(tree)

    PARAMS:
		Name: t, Type: CustomType(tr)
		Name: n, Type: Integer


Symbol Entry: 
    ID: treeMerge

    TYPE: fn: CustomType(tree) -> CustomType(tree) -> CustomType(tree)

    PARAMS:
		Name: t1, Type: CustomType(tree)
		Name: t2, Type: CustomType(tree)


Symbol Entry: 
    ID: treePrint

    TYPE: fn: CustomType(tree) -> Unit

    PARAMS:
		Name: t, Type: CustomType(tree)

 ====================================================== 
SCOPE: 2

Symbol Entry: 
    ID: seed

    TYPE: Reference of type Integer
 ====================================================== 
SCOPE: 3

Symbol Entry: 
    ID: next

    TYPE: fn: Unknown -> Integer

    PARAMS:
		Name: u, Type: Unknown





 $$$ PRINTING SYMBOL TABLE $$$ 
 ====================================================== 
SCOPE: 1

Symbol Entry: 
    ID: N

    TYPE: N()

    PARAMS:
		Name: tr, Type: CustomType(tr)


Symbol Entry: 
    ID: Nil

    TYPE: Nil()

    PARAMS:
		Name: tree, Type: CustomType(tree)


Symbol Entry: 
    ID: Node

    TYPE: Node(Integer, CustomType(tree), CustomType(tree))

    PARAMS:
		Name: tree, Type: CustomType(tree)


Symbol Entry: 
    ID: main

    TYPE: Unknown

Symbol Entry: 
    ID: tr

    TYPE: CustomType(tr)

    PARAMS:
		Name: N, Type: N()


Symbol Entry: 
    ID: tree

    TYPE: CustomType(tree)

    PARAMS:
		Name: Nil, Type: Nil()
		Name: Node, Type: Node(Integer, CustomType(tree), CustomType(tree))


Symbol Entry: 
    ID: treeCount

    TYPE: fn: CustomType(tree) -> Integer

    PARAMS:
		Name: t, Type: CustomType(tree)


Symbol Entry: 
    ID: treeDelete

    TYPE: fn: CustomType(tree) -> Integer -> CustomType(tree)

    PARAMS:
		Name: t, Type: CustomType(tree)
		Name: n, Type: Integer


Symbol Entry: 
    ID: treeInsert

    TYPE: fn: CustomType(tr) -> Integer -> CustomType(tree)

    PARAMS:
		Name: t, Type: CustomType(tr)
		Name: n, Type: Integer


Symbol Entry: 
    ID: treeMerge

    TYPE: fn: CustomType(tree) -> CustomType(tree) -> CustomType(tree)

    PARAMS:
		Name: t1, Type: CustomType(tree)
		Name: t2, Type: CustomType(tree)


Symbol Entry: 
    ID: treePrint

    TYPE: fn: CustomType(tree) -> Unit

    PARAMS:
		Name: t, Type: CustomType(tree)

 ====================================================== 
SCOPE: 2

Symbol Entry: 
    ID: seed

    TYPE: Reference of type Integer
 ====================================================== 
SCOPE: 3

Symbol Entry: 
    ID: next

    TYPE: fn: Unit -> Integer

    PARAMS:
		Name: u, Type: Unit

 ====================================================== 
SCOPE: 4

Symbol Entry: 
    ID: random

    TYPE: fn: Integer -> Integer

    PARAMS:
		Name: max, Type: Integer





 $$$ PRINTING SYMBOL TABLE $$$ 
 ====================================================== 
SCOPE: 1

Symbol Entry: 
    ID: N

    TYPE: N()

    PARAMS:
		Name: tr, Type: CustomType(tr)


Symbol Entry: 
    ID: Nil

    TYPE: Nil()

    PARAMS:
		Name: tree, Type: CustomType(tree)


Symbol Entry: 
    ID: Node

    TYPE: Node(Integer, CustomType(tree), CustomType(tree))

    PARAMS:
		Name: tree, Type: CustomType(tree)


Symbol Entry: 
    ID: main

    TYPE: Unknown

Symbol Entry: 
    ID: tr

    TYPE: CustomType(tr)

    PARAMS:
		Name: N, Type: N()


Symbol Entry: 
    ID: tree

    TYPE: CustomType(tree)

    PARAMS:
		Name: Nil, Type: Nil()
		Name: Node, Type: Node(Integer, CustomType(tree), CustomType(tree))


Symbol Entry: 
    ID: treeCount

    TYPE: fn: CustomType(tree) -> Integer

    PARAMS:
		Name: t, Type: CustomType(tree)


Symbol Entry: 
    ID: treeDelete

    TYPE: fn: CustomType(tree) -> Integer -> CustomType(tree)

    PARAMS:
		Name: t, Type: CustomType(tree)
		Name: n, Type: Integer


Symbol Entry: 
    ID: treeInsert

    TYPE: fn: CustomType(tr) -> Integer -> CustomType(tree)

    PARAMS:
		Name: t, Type: CustomType(tr)
		Name: n, Type: Integer


Symbol Entry: 
    ID: treeMerge

    TYPE: fn: CustomType(tree) -> CustomType(tree) -> CustomType(tree)

    PARAMS:
		Name: t1, Type: CustomType(tree)
		Name: t2, Type: CustomType(tree)


Symbol Entry: 
    ID: treePrint

    TYPE: fn: CustomType(tree) -> Unit

    PARAMS:
		Name: t, Type: CustomType(tree)

 ====================================================== 
SCOPE: 2

Symbol Entry: 
    ID: seed

    TYPE: Reference of type Integer
 ====================================================== 
SCOPE: 3

Symbol Entry: 
    ID: next

    TYPE: fn: Unit -> Integer

    PARAMS:
		Name: u, Type: Unit

 ====================================================== 
SCOPE: 4

Symbol Entry: 
    ID: random

    TYPE: fn: Integer -> Integer

    PARAMS:
		Name: max, Type: Integer

 ====================================================== 
SCOPE: 5

Symbol Entry: 
    ID: t

    TYPE: Reference of type Unknown




 $$$ PRINTING SYMBOL TABLE $$$ 
 ====================================================== 
SCOPE: 1

Symbol Entry: 
    ID: N

    TYPE: N()

    PARAMS:
		Name: tr, Type: CustomType(tr)


Symbol Entry: 
    ID: Nil

    TYPE: Nil()

    PARAMS:
		Name: tree, Type: CustomType(tree)


Symbol Entry: 
    ID: Node

    TYPE: Node(Integer, CustomType(tree), CustomType(tree))

    PARAMS:
		Name: tree, Type: CustomType(tree)


Symbol Entry: 
    ID: main

    TYPE: Unknown

Symbol Entry: 
    ID: tr

    TYPE: CustomType(tr)

    PARAMS:
		Name: N, Type: N()


Symbol Entry: 
    ID: tree

    TYPE: CustomType(tree)

    PARAMS:
		Name: Nil, Type: Nil()
		Name: Node, Type: Node(Integer, CustomType(tree), CustomType(tree))


Symbol Entry: 
    ID: treeCount

    TYPE: fn: CustomType(tree) -> Integer

    PARAMS:
		Name: t, Type: CustomType(tree)


Symbol Entry: 
    ID: treeDelete

    TYPE: fn: CustomType(tree) -> Integer -> CustomType(tree)

    PARAMS:
		Name: t, Type: CustomType(tree)
		Name: n, Type: Integer


Symbol Entry: 
    ID: treeInsert

    TYPE: fn: CustomType(tr) -> Integer -> CustomType(tree)

    PARAMS:
		Name: t, Type: CustomType(tr)
		Name: n, Type: Integer


Symbol Entry: 
    ID: treeMerge

    TYPE: fn: CustomType(tree) -> CustomType(tree) -> CustomType(tree)

    PARAMS:
		Name: t1, Type: CustomType(tree)
		Name: t2, Type: CustomType(tree)


Symbol Entry: 
    ID: treePrint

    TYPE: fn: CustomType(tree) -> Unit

    PARAMS:
		Name: t, Type: CustomType(tree)

 ====================================================== 
SCOPE: 2

Symbol Entry: 
    ID: seed

    TYPE: Reference of type Integer
 ====================================================== 
SCOPE: 3

Symbol Entry: 
    ID: next

    TYPE: fn: Unit -> Integer

    PARAMS:
		Name: u, Type: Unit

 ====================================================== 
SCOPE: 4

Symbol Entry: 
    ID: random

    TYPE: fn: Integer -> Integer

    PARAMS:
		Name: max, Type: Integer

 ====================================================== 
SCOPE: 5

Symbol Entry: 
    ID: t

    TYPE: Reference of type CustomType(tree)
 ====================================================== 
SCOPE: 6

Symbol Entry: 
    ID: choose

    TYPE: fn: Unknown -> Unknown

    PARAMS:
		Name: t, Type: Unknown

 ====================================================== 
SCOPE: 7

Symbol Entry: 
    ID: t

    TYPE: Unknown
 ====================================================== 
SCOPE: 8
 ====================================================== 
SCOPE: 9

Symbol Entry: 
    ID: n

    TYPE: Integer

Symbol Entry: 
    ID: t1

    TYPE: CustomType(tree)

Symbol Entry: 
    ID: t2

    TYPE: CustomType(tree)
 ====================================================== 
SCOPE: 10

Symbol Entry: 
    ID: c1

    TYPE: Integer

Symbol Entry: 
    ID: c2

    TYPE: Integer




 $$$ PRINTING SYMBOL TABLE $$$ 
 ====================================================== 
SCOPE: 1

Symbol Entry: 
    ID: N

    TYPE: N()

    PARAMS:
		Name: tr, Type: CustomType(tr)


Symbol Entry: 
    ID: Nil

    TYPE: Nil()

    PARAMS:
		Name: tree, Type: CustomType(tree)


Symbol Entry: 
    ID: Node

    TYPE: Node(Integer, CustomType(tree), CustomType(tree))

    PARAMS:
		Name: tree, Type: CustomType(tree)


Symbol Entry: 
    ID: main

    TYPE: Unknown

Symbol Entry: 
    ID: tr

    TYPE: CustomType(tr)

    PARAMS:
		Name: N, Type: N()


Symbol Entry: 
    ID: tree

    TYPE: CustomType(tree)

    PARAMS:
		Name: Nil, Type: Nil()
		Name: Node, Type: Node(Integer, CustomType(tree), CustomType(tree))


Symbol Entry: 
    ID: treeCount

    TYPE: fn: CustomType(tree) -> Integer

    PARAMS:
		Name: t, Type: CustomType(tree)


Symbol Entry: 
    ID: treeDelete

    TYPE: fn: CustomType(tree) -> Integer -> CustomType(tree)

    PARAMS:
		Name: t, Type: CustomType(tree)
		Name: n, Type: Integer


Symbol Entry: 
    ID: treeInsert

    TYPE: fn: CustomType(tr) -> Integer -> CustomType(tree)

    PARAMS:
		Name: t, Type: CustomType(tr)
		Name: n, Type: Integer


Symbol Entry: 
    ID: treeMerge

    TYPE: fn: CustomType(tree) -> CustomType(tree) -> CustomType(tree)

    PARAMS:
		Name: t1, Type: CustomType(tree)
		Name: t2, Type: CustomType(tree)


Symbol Entry: 
    ID: treePrint

    TYPE: fn: CustomType(tree) -> Unit

    PARAMS:
		Name: t, Type: CustomType(tree)

 ====================================================== 
SCOPE: 2

Symbol Entry: 
    ID: seed

    TYPE: Reference of type Integer
 ====================================================== 
SCOPE: 3

Symbol Entry: 
    ID: next

    TYPE: fn: Unit -> Integer

    PARAMS:
		Name: u, Type: Unit

 ====================================================== 
SCOPE: 4

Symbol Entry: 
    ID: random

    TYPE: fn: Integer -> Integer

    PARAMS:
		Name: max, Type: Integer

 ====================================================== 
SCOPE: 5

Symbol Entry: 
    ID: t

    TYPE: Reference of type CustomType(tree)
 ====================================================== 
SCOPE: 6

Symbol Entry: 
    ID: choose

    TYPE: fn: Unknown -> Unknown

    PARAMS:
		Name: t, Type: Unknown

 ====================================================== 
SCOPE: 7

Symbol Entry: 
    ID: t

    TYPE: Unknown
 ====================================================== 
SCOPE: 8
 ====================================================== 
SCOPE: 9

Symbol Entry: 
    ID: n

    TYPE: Integer

Symbol Entry: 
    ID: t1

    TYPE: CustomType(tree)

Symbol Entry: 
    ID: t2

    TYPE: CustomType(tree)
 ====================================================== 
SCOPE: 10

Symbol Entry: 
    ID: c1

    TYPE: Integer

Symbol Entry: 
    ID: c2

    TYPE: Integer
 ====================================================== 
SCOPE: 11

Symbol Entry: 
    ID: r

    TYPE: Integer




 $$$ PRINTING SYMBOL TABLE $$$ 
 ====================================================== 
SCOPE: 1

Symbol Entry: 
    ID: N

    TYPE: N()

    PARAMS:
		Name: tr, Type: CustomType(tr)


Symbol Entry: 
    ID: Nil

    TYPE: Nil()

    PARAMS:
		Name: tree, Type: CustomType(tree)


Symbol Entry: 
    ID: Node

    TYPE: Node(Integer, CustomType(tree), CustomType(tree))

    PARAMS:
		Name: tree, Type: CustomType(tree)


Symbol Entry: 
    ID: main

    TYPE: Unknown

Symbol Entry: 
    ID: tr

    TYPE: CustomType(tr)

    PARAMS:
		Name: N, Type: N()


Symbol Entry: 
    ID: tree

    TYPE: CustomType(tree)

    PARAMS:
		Name: Nil, Type: Nil()
		Name: Node, Type: Node(Integer, CustomType(tree), CustomType(tree))


Symbol Entry: 
    ID: treeCount

    TYPE: fn: CustomType(tree) -> Integer

    PARAMS:
		Name: t, Type: CustomType(tree)


Symbol Entry: 
    ID: treeDelete

    TYPE: fn: CustomType(tree) -> Integer -> CustomType(tree)

    PARAMS:
		Name: t, Type: CustomType(tree)
		Name: n, Type: Integer


Symbol Entry: 
    ID: treeInsert

    TYPE: fn: CustomType(tr) -> Integer -> CustomType(tree)

    PARAMS:
		Name: t, Type: CustomType(tr)
		Name: n, Type: Integer


Symbol Entry: 
    ID: treeMerge

    TYPE: fn: CustomType(tree) -> CustomType(tree) -> CustomType(tree)

    PARAMS:
		Name: t1, Type: CustomType(tree)
		Name: t2, Type: CustomType(tree)


Symbol Entry: 
    ID: treePrint

    TYPE: fn: CustomType(tree) -> Unit

    PARAMS:
		Name: t, Type: CustomType(tree)

 ====================================================== 
SCOPE: 2

Symbol Entry: 
    ID: seed

    TYPE: Reference of type Integer
 ====================================================== 
SCOPE: 3

Symbol Entry: 
    ID: next

    TYPE: fn: Unit -> Integer

    PARAMS:
		Name: u, Type: Unit

 ====================================================== 
SCOPE: 4

Symbol Entry: 
    ID: random

    TYPE: fn: Integer -> Integer

    PARAMS:
		Name: max, Type: Integer

 ====================================================== 
SCOPE: 5

Symbol Entry: 
    ID: t

    TYPE: Reference of type CustomType(tree)
 ====================================================== 
SCOPE: 6

Symbol Entry: 
    ID: choose

    TYPE: fn: CustomType(tree) -> Integer

    PARAMS:
		Name: t, Type: CustomType(tree)





 $$$ PRINTING SYMBOL TABLE $$$ 
 ====================================================== 
SCOPE: 1

Symbol Entry: 
    ID: N

    TYPE: N()

    PARAMS:
		Name: tr, Type: CustomType(tr)


Symbol Entry: 
    ID: Nil

    TYPE: Nil()

    PARAMS:
		Name: tree, Type: CustomType(tree)


Symbol Entry: 
    ID: Node

    TYPE: Node(Integer, CustomType(tree), CustomType(tree))

    PARAMS:
		Name: tree, Type: CustomType(tree)


Symbol Entry: 
    ID: main

    TYPE: Unknown

Symbol Entry: 
    ID: tr

    TYPE: CustomType(tr)

    PARAMS:
		Name: N, Type: N()


Symbol Entry: 
    ID: tree

    TYPE: CustomType(tree)

    PARAMS:
		Name: Nil, Type: Nil()
		Name: Node, Type: Node(Integer, CustomType(tree), CustomType(tree))


Symbol Entry: 
    ID: treeCount

    TYPE: fn: CustomType(tree) -> Integer

    PARAMS:
		Name: t, Type: CustomType(tree)


Symbol Entry: 
    ID: treeDelete

    TYPE: fn: CustomType(tree) -> Integer -> CustomType(tree)

    PARAMS:
		Name: t, Type: CustomType(tree)
		Name: n, Type: Integer


Symbol Entry: 
    ID: treeInsert

    TYPE: fn: CustomType(tr) -> Integer -> CustomType(tree)

    PARAMS:
		Name: t, Type: CustomType(tr)
		Name: n, Type: Integer


Symbol Entry: 
    ID: treeMerge

    TYPE: fn: CustomType(tree) -> CustomType(tree) -> CustomType(tree)

    PARAMS:
		Name: t1, Type: CustomType(tree)
		Name: t2, Type: CustomType(tree)


Symbol Entry: 
    ID: treePrint

    TYPE: fn: CustomType(tree) -> Unit

    PARAMS:
		Name: t, Type: CustomType(tree)

 ====================================================== 
SCOPE: 2

Symbol Entry: 
    ID: seed

    TYPE: Reference of type Integer
 ====================================================== 
SCOPE: 3

Symbol Entry: 
    ID: next

    TYPE: fn: Unit -> Integer

    PARAMS:
		Name: u, Type: Unit

 ====================================================== 
SCOPE: 4

Symbol Entry: 
    ID: random

    TYPE: fn: Integer -> Integer

    PARAMS:
		Name: max, Type: Integer

 ====================================================== 
SCOPE: 5

Symbol Entry: 
    ID: t

    TYPE: Reference of type CustomType(tree)
 ====================================================== 
SCOPE: 6

Symbol Entry: 
    ID: choose

    TYPE: fn: CustomType(tree) -> Integer

    PARAMS:
		Name: t, Type: CustomType(tree)

 ====================================================== 
SCOPE: 7

Symbol Entry: 
    ID: i

    TYPE: Integer
 ====================================================== 
SCOPE: 8

Symbol Entry: 
    ID: n

    TYPE: Integer




 $$$ PRINTING SYMBOL TABLE $$$ 
 ====================================================== 
SCOPE: 1

Symbol Entry: 
    ID: N

    TYPE: N()

    PARAMS:
		Name: tr, Type: CustomType(tr)


Symbol Entry: 
    ID: Nil

    TYPE: Nil()

    PARAMS:
		Name: tree, Type: CustomType(tree)


Symbol Entry: 
    ID: Node

    TYPE: Node(Integer, CustomType(tree), CustomType(tree))

    PARAMS:
		Name: tree, Type: CustomType(tree)


Symbol Entry: 
    ID: main

    TYPE: Unit

Symbol Entry: 
    ID: tr

    TYPE: CustomType(tr)

    PARAMS:
		Name: N, Type: N()


Symbol Entry: 
    ID: tree

    TYPE: CustomType(tree)

    PARAMS:
		Name: Nil, Type: Nil()
		Name: Node, Type: Node(Integer, CustomType(tree), CustomType(tree))


Symbol Entry: 
    ID: treeCount

    TYPE: fn: CustomType(tree) -> Integer

    PARAMS:
		Name: t, Type: CustomType(tree)


Symbol Entry: 
    ID: treeDelete

    TYPE: fn: CustomType(tree) -> Integer -> CustomType(tree)

    PARAMS:
		Name: t, Type: CustomType(tree)
		Name: n, Type: Integer


Symbol Entry: 
    ID: treeInsert

    TYPE: fn: CustomType(tr) -> Integer -> CustomType(tree)

    PARAMS:
		Name: t, Type: CustomType(tr)
		Name: n, Type: Integer


Symbol Entry: 
    ID: treeMerge

    TYPE: fn: CustomType(tree) -> CustomType(tree) -> CustomType(tree)

    PARAMS:
		Name: t1, Type: CustomType(tree)
		Name: t2, Type: CustomType(tree)


Symbol Entry: 
    ID: treePrint

    TYPE: fn: CustomType(tree) -> Unit

    PARAMS:
		Name: t, Type: CustomType(tree)



Success.
