(* distinction between true, false as expressions or conditions *)

let x : bool = true

let foo (y : bool) : bool = x && not y

let x21 : bool = not ((3 < 8) && true)

let dsy : bool = not false || (true && not (false || true))

let t : bool = not true

let semi1 : unit = 1<2; 2<3; ()

let psi3 (x : int) : unit = if false then (x + 2; ())

let psi : unit = if true then ()

let doo (x : bool) : bool = (false && x) || true && false; not false || not true

let psi32 (x : int) : unit = if false then (x + 2; ())

let semi2 : bool = 1<2; 2<3

let psi2 (x : int) : unit = if false then (x + 2; ())

let x1 : bool = not ((3 < 8) && true)

let ifstmt (x : int ref) : unit = 
  if true then x := 1 else ()

let foo (y : bool) : bool = true && not y

let dsy (x : bool) (y : bool) : bool = 
  not (false && x) || (y || true && not (x || y))

let f (y : bool) (x : bool) : bool = not y; not x